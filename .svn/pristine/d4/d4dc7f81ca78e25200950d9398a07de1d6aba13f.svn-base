[
  {
    "timestamp": "2018-04-10 22:00:26.328009",
    "checksum": "5d2e7572a1e4d7e820c61ce41437d413d87f7889  client.c\n6b8d19d2cd19bf8e64639fe575a124597eb19575  common.c\ndf4dc9539d84a9f223d3e83d28ecb2fa26dd283f  common.h\n",
    "revision": "86667",
    "testcases": [
      {
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "invalid_delete_test"
      },
      {
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "invalid_get_test"
      },
      {
        "description": "Tests for no memory errors or leaks (depends on: PUT)",
        "ptsEarned": 0.0,
        "ptsPossible": 0.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==13674== Memcheck, a memory error detector\n==13674== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==13674== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==13674== Command: ./client 127.0.0.1:49737 PUT testfile.c testcommon.c\n==13674== \n==13674== \n==13674== HEAP SUMMARY:\n==13674==     in use at exit: 0 bytes in 0 blocks\n==13674==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==13674== \n==13674== All heap blocks were freed -- no leaks are possible\n==13674== \n==13674== For counts of detected and suppressed errors, rerun with: -v\n==13674== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "name": "memory_test"
      },
      {
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "name": "too_little_data_test"
      },
      {
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "name": "too_much_data_test"
      },
      {
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "valid_delete_test"
      },
      {
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "name": "valid_get_test"
      },
      {
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "valid_list_test"
      },
      {
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "name": "valid_put_test"
      }
    ]
  },
  {
    "timestamp": "2018-04-11 22:00:26.553346",
    "checksum": "5d2e7572a1e4d7e820c61ce41437d413d87f7889  client.c\n6b8d19d2cd19bf8e64639fe575a124597eb19575  common.c\ndf4dc9539d84a9f223d3e83d28ecb2fa26dd283f  common.h\n",
    "revision": "87256",
    "testcases": [
      {
        "description": "Tests that we cannot delete invalid files",
        "ptsPossible": 2.0,
        "name": "invalid_delete_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we cannot get invalid files",
        "ptsPossible": 2.0,
        "name": "invalid_get_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests for no memory errors or leaks (depends on: PUT)",
        "ptsPossible": 0.0,
        "name": "memory_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==18960== Memcheck, a memory error detector\n==18960== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==18960== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==18960== Command: ./client 127.0.0.1:49737 PUT testfile.c testcommon.c\n==18960== \n==18960== \n==18960== HEAP SUMMARY:\n==18960==     in use at exit: 0 bytes in 0 blocks\n==18960==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==18960== \n==18960== All heap blocks were freed -- no leaks are possible\n==18960== \n==18960== For counts of detected and suppressed errors, rerun with: -v\n==18960== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "too_little_data_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "too_much_data_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsPossible": 3.0,
        "name": "valid_delete_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsPossible": 3.0,
        "name": "valid_get_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "valid_list_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can put valid files",
        "ptsPossible": 2.0,
        "name": "valid_put_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0
      }
    ]
  },
  {
    "timestamp": "2018-04-12 22:00:26.610347",
    "checksum": "5d2e7572a1e4d7e820c61ce41437d413d87f7889  client.c\n6b8d19d2cd19bf8e64639fe575a124597eb19575  common.c\ndf4dc9539d84a9f223d3e83d28ecb2fa26dd283f  common.h\n",
    "revision": "87634",
    "testcases": [
      {
        "description": "Tests that we cannot delete invalid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "invalid_delete_test"
      },
      {
        "description": "Tests that we cannot get invalid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "invalid_get_test"
      },
      {
        "description": "Tests for no memory errors or leaks (depends on: PUT)",
        "ptsEarned": 0.0,
        "ptsPossible": 0.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==23526== Memcheck, a memory error detector\n==23526== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==23526== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==23526== Command: ./client 127.0.0.1:49737 PUT testfile.c testcommon.c\n==23526== \n==23526== \n==23526== HEAP SUMMARY:\n==23526==     in use at exit: 0 bytes in 0 blocks\n==23526==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==23526== \n==23526== All heap blocks were freed -- no leaks are possible\n==23526== \n==23526== For counts of detected and suppressed errors, rerun with: -v\n==23526== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "name": "memory_test"
      },
      {
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "name": "too_little_data_test"
      },
      {
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "name": "too_much_data_test"
      },
      {
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "valid_delete_test"
      },
      {
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "name": "valid_get_test"
      },
      {
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "name": "valid_list_test"
      },
      {
        "description": "Tests that we can put valid files",
        "ptsEarned": 0.0,
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "name": "valid_put_test"
      }
    ]
  },
  {
    "timestamp": "2018-04-13 22:00:27.081645",
    "checksum": "5d2e7572a1e4d7e820c61ce41437d413d87f7889  client.c\n6b8d19d2cd19bf8e64639fe575a124597eb19575  common.c\ndf4dc9539d84a9f223d3e83d28ecb2fa26dd283f  common.h\n",
    "revision": "87951",
    "testcases": [
      {
        "description": "Tests that we cannot delete invalid files",
        "ptsPossible": 2.0,
        "name": "invalid_delete_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we cannot get invalid files",
        "ptsPossible": 2.0,
        "name": "invalid_get_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests for no memory errors or leaks (depends on: PUT)",
        "ptsPossible": 0.0,
        "name": "memory_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==2992== Memcheck, a memory error detector\n==2992== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==2992== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==2992== Command: ./client 127.0.0.1:49737 PUT testfile.c testcommon.c\n==2992== \n==2992== \n==2992== HEAP SUMMARY:\n==2992==     in use at exit: 0 bytes in 0 blocks\n==2992==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==2992== \n==2992== All heap blocks were freed -- no leaks are possible\n==2992== \n==2992== For counts of detected and suppressed errors, rerun with: -v\n==2992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "too_little_data_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "too_much_data_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsPossible": 3.0,
        "name": "valid_delete_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsPossible": 3.0,
        "name": "valid_get_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsPossible": 2.0,
        "name": "valid_list_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0
      },
      {
        "description": "Tests that we can put valid files",
        "ptsPossible": 2.0,
        "name": "valid_put_test",
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0
      }
    ]
  },
  {
    "timestamp": "2018-04-14 22:00:26.554635",
    "checksum": "5d2e7572a1e4d7e820c61ce41437d413d87f7889  client.c\n6b8d19d2cd19bf8e64639fe575a124597eb19575  common.c\ndf4dc9539d84a9f223d3e83d28ecb2fa26dd283f  common.h\n",
    "revision": "88280",
    "testcases": [
      {
        "description": "Tests that we cannot delete invalid files",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0,
        "name": "invalid_delete_test"
      },
      {
        "description": "Tests that we cannot get invalid files",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0,
        "name": "invalid_get_test"
      },
      {
        "description": "Tests for no memory errors or leaks (depends on: PUT)",
        "ptsPossible": 0.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\n==9178== Memcheck, a memory error detector\n==9178== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==9178== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==9178== Command: ./client 127.0.0.1:49737 PUT testfile.c testcommon.c\n==9178== \n==9178== \n==9178== HEAP SUMMARY:\n==9178==     in use at exit: 0 bytes in 0 blocks\n==9178==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==9178== \n==9178== All heap blocks were freed -- no leaks are possible\n==9178== \n==9178== For counts of detected and suppressed errors, rerun with: -v\n==9178== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)",
        "ptsEarned": 0.0,
        "name": "memory_test"
      },
      {
        "description": "Tests that we recognize when there is not enough data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0,
        "name": "too_little_data_test"
      },
      {
        "description": "Tests that we recognize when there is too much data sent (requires PUT to work)",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.",
        "ptsEarned": 0.0,
        "name": "too_much_data_test"
      },
      {
        "description": "Tests that we can delete valid files (requires PUT to work)",
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0,
        "name": "valid_delete_test"
      },
      {
        "description": "Tests that we can get valid files from the server (requires PUT to work)",
        "ptsPossible": 3.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0,
        "name": "valid_get_test"
      },
      {
        "description": "Tests that we can LIST files (requires PUT to work)",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nDid not find the correct output",
        "ptsEarned": 0.0,
        "name": "valid_list_test"
      },
      {
        "description": "Tests that we can put valid files",
        "ptsPossible": 2.0,
        "log": "Trying to compile your code...\nSuccessfully compiled your code.\nUploaded file content does not match original",
        "ptsEarned": 0.0,
        "name": "valid_put_test"
      }
    ]
  }
]